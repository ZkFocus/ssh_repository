<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
 <mapper namespace="com.mybatis.demo.dao.CustomerMapper">
 <!-- 
 	private Integer id;
	private String name;
	private String email;
	//用接口来定义，得进行初始化操作
	private Set<Order> orders=new HashSet<>();
 	cid  name  email        oid  orderNo       price    
 
 select	
 	c.id 		cid,
 	c.name 		name,
 	c.email 	email,
 	o.id 		oid,
 	o.orderNo 	orderNo,
 	o.price 	price,
 	o.c_id 		ocid
 	from customer_ c
left join order_ o 
	on c.id=o.c_id
where c.name=#{name}
  -->
 <resultMap type="com.mybatis.demo.entity.Customer" id="customer">
 	<!-- 
 		column 用于指定数据库中的列 也有可能为数据表的重命名列 
 		property用于指定实体类的属性 
 	-->
 	<id column="cid" property="id"/>
 	<result column="name" property="name"/>
 	<result column="email" property="email"/>
 	<!-- 
 		collection 定义关联的集合属性
 			property:指定属性名
 			ofType:指定该属性所属的java类型
 	 -->
 	<collection property="orders" ofType="com.mybatis.demo.entity.Order">
 		<!-- 定义集合的封装规则 -->
 		<id column="oid" property="id"/>
 		<result column="orderNo" property="orderNo"/>
 		<result column="price" property="price"/>
 		
 		<!-- 借用查询的结果列为Order对象中的customer赋值 否则打印Order对象中的customer属性为null -->
 		<result column="ocid" property="customer.id"/>
 		<result column="name" property="customer.name"/>
 		<result column="email" property="customer.email"/>
 		
 	</collection>
 </resultMap>
	<select id="getCustomerAndOrdersByName" resultMap="customer">
		select  
			c.id cid,c.name name,c.email email,o.id oid,o.orderNo orderNo,o.price price,o.c_id ocid
		from customer_ c
			left join order_ o 
			on c.id=o.c_id
			where c.name=#{name}
	</select>
	
	<!-- 分步查询 -->
	<resultMap type="com.mybatis.demo.entity.Customer" id="customerStep">
		<id column="cid" property="id"/>
		<result column="name" property="name"/>
		<result column="email" property="email"/>
		<!-- column 将某列的值传过去
			多列形如 select id cid,name,email from customer_ where id = #{id}查询的cid
			key1 为com.mybatis.demo.dao.OrderMapper.getOrderByCustomerId 中取值的。。
			column1为
			column="{key1=column1,key2=column2}"
			column="{id=id}" order的id值等于查询的结果id值
			
			fetchType="lazy"    默认延迟加载
					  "eager"	指定级联查询方式 理解检索 将覆盖全局配置
		 -->
		<collection property="orders" select="com.mybatis.demo.dao.OrderMapper.getOrderByCustomerId"
			column="{id=cid}" >
		</collection>
	</resultMap>
	<select id="getCustomerByIdStep" resultMap="customerStep">
		select id cid,name,email from customer_ where id = #{id}
	</select>
</mapper>